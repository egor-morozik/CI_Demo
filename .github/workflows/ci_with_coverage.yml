name: CI Pipeline

on: 
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'staging'
      version:
        description: 'Version to deploy'
        required: false

jobs:
  test:
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
        os: [ubuntu-latest]
        include:
          - python-version: '3.11'
            os: ubuntu-latest
            extra-label: "latest-ubuntu"
    
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov flake8

      - name: Run tests with coverage
        run: |
          # Создаем директорию для отчетов
          mkdir -p coverage-reports
          # Запускаем тесты с coverage
          pytest --cov=src --cov-report=term --cov-report=html:coverage-reports/html --cov-report=xml:coverage-reports/coverage.xml tests/ -v

      - name: Run lint
        run: flake8 . --max-line-length=120 --extend-ignore=E203,E501

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports-${{ matrix.python-version }}-${{ matrix.os }}
          path: coverage-reports/
          if-no-files-found: warn